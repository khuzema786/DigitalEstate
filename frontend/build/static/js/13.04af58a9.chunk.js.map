{"version":3,"sources":["components/Message.jsx","components/FormContainer.jsx","actions/propertyActions.js","actions/uploadActions.js","screens/EditProperty.jsx"],"names":["Message","variant","children","FormContainer","className","xs","md","listProperty","keyword","location","option","type","dispatch","a","PROPERTY_LIST_REQUEST","axios","get","data","PROPERTY_LIST_SUCCESS","payload","PROPERTY_LIST_FAIL","response","message","listPropertyDetails","id","PROPERTY_DETAILS_REQUEST","PROPERTY_DETAILS_SUCCESS","PROPERTY_DETAILS_FAIL","createProperty","body","getState","PROPERTY_CREATE_REQUEST","userInfo","userLogin","config","headers","Authorization","token","post","PROPERTY_CREATE_SUCCESS","logout","PROPERTY_CREATE_FAIL","listAllProperty","PROPERTY_ALL_LIST_REQUEST","PROPERTY_ALL_LIST_SUCCESS","PROPERTY_ALL_LIST_FAIL","deleteProperty","PROPERTY_DELETE_REQUEST","delete","PROPERTY_DELETE_SUCCESS","PROPERTY_DELETE_FAIL","updateProperty","property","PROPERTY_UPDATE_REQUEST","put","_id","PROPERTY_UPDATE_SUCCESS","PROPERTY_UPDATE_FAIL","upload","files","formData","UPLOAD_REQUEST","index","length","file","append","console","log","UPLOAD_SUCCESS","path","UPLOAD_FAIL","EditProperty","match","history","propertyId","params","useState","name","setName","price","setPrice","country","setCountry","setLocation","maintainance","setMaintainance","size","setSize","description","setDescription","setType","setOption","year","setYear","bathrooms","setBathrooms","bedrooms","setBedrooms","setMessage","images","setImages","useDispatch","useSelector","state","uploadState","uploading","uploadSuccess","uploadMessage","propertyDetails","loading","error","updatePropertyState","propertyUpdate","loadingUpdate","success","errorUpdate","useEffect","UPLOAD_RESET","PROPERTY_UPDATE_RESET","push","uploadFileHandler","e","target","FormData","onSubmit","preventDefault","Group","controlId","Label","Control","placeholder","value","onChange","File","label","custom","multiple","as","style","backgroundColor","border"],"mappings":"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","file":"static/js/13.04af58a9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant = 'info', children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import axios from 'axios'\r\nimport {\r\n  PROPERTY_LIST_REQUEST,\r\n  PROPERTY_LIST_SUCCESS,\r\n  PROPERTY_LIST_FAIL,\r\n  PROPERTY_DETAILS_REQUEST,\r\n  PROPERTY_DETAILS_SUCCESS,\r\n  PROPERTY_DETAILS_FAIL,\r\n  PROPERTY_CREATE_REQUEST,\r\n  PROPERTY_CREATE_SUCCESS,\r\n  PROPERTY_CREATE_FAIL,\r\n  PROPERTY_ALL_LIST_REQUEST,\r\n  PROPERTY_ALL_LIST_SUCCESS,\r\n  PROPERTY_ALL_LIST_FAIL,\r\n  PROPERTY_DELETE_REQUEST,\r\n  PROPERTY_DELETE_SUCCESS,\r\n  PROPERTY_DELETE_FAIL,\r\n  PROPERTY_UPDATE_REQUEST,\r\n  PROPERTY_UPDATE_SUCCESS,\r\n  PROPERTY_UPDATE_FAIL,\r\n} from '../constants/propertyConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const listProperty = (\r\n  keyword = '',\r\n  location = '',\r\n  option = '',\r\n  type = '',\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROPERTY_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/property?keyword=${keyword}&location=${location}&option=${option}&type=${type}`,\r\n    )\r\n\r\n    dispatch({\r\n      type: PROPERTY_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROPERTY_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listPropertyDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROPERTY_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/property/${id}`)\r\n\r\n    dispatch({\r\n      type: PROPERTY_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROPERTY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProperty = (body) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROPERTY_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/property/`, body, config)\r\n\r\n    dispatch({\r\n      type: PROPERTY_CREATE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PROPERTY_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listAllProperty = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PROPERTY_ALL_LIST_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get('/api/property/list', config)\r\n\r\n    dispatch({\r\n      type: PROPERTY_ALL_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROPERTY_ALL_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProperty = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROPERTY_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/property/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PROPERTY_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PROPERTY_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProperty = (property) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROPERTY_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/property/${property._id}`,\r\n      property,\r\n      config,\r\n    )\r\n\r\n    dispatch({\r\n      type: PROPERTY_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({ type: PROPERTY_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PROPERTY_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n  UPLOAD_REQUEST,\r\n  UPLOAD_SUCCESS,\r\n  UPLOAD_FAIL,\r\n} from '../constants/uploadConstants'\r\n\r\nexport const upload = (files, formData) => async (dispatch, getState) => {\r\n  dispatch({ type: UPLOAD_REQUEST })\r\n  for (let index = 0; index < files.length; index++) {\r\n    const file = files[index]\r\n    formData.append('image', file)\r\n  }\r\n\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post('/api/upload', formData, config)\r\n    console.log(data)\r\n    dispatch({\r\n      type: UPLOAD_SUCCESS,\r\n      payload: { path: data.path, message: data.message },\r\n    })\r\n  } catch (error) {\r\n    console.log(error)\r\n    dispatch({\r\n      type: UPLOAD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { upload } from '../actions/uploadActions'\r\nimport { listPropertyDetails, updateProperty } from '../actions/propertyActions'\r\nimport { PROPERTY_UPDATE_RESET } from '../constants/propertyConstants'\r\nimport { UPLOAD_RESET } from '../constants/uploadConstants'\r\n\r\nconst EditProperty = ({ match, history }) => {\r\n  const propertyId = match.params.id\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [country, setCountry] = useState('')\r\n  const [location, setLocation] = useState('')\r\n  const [maintainance, setMaintainance] = useState(0)\r\n  const [size, setSize] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [type, setType] = useState('')\r\n  const [option, setOption] = useState('')\r\n  const [year, setYear] = useState(0)\r\n  const [bathrooms, setBathrooms] = useState(0)\r\n  const [bedrooms, setBedrooms] = useState(0)\r\n  const [message, setMessage] = useState('')\r\n  const [images, setImages] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const uploadState = useSelector((state) => state.upload)\r\n  const { uploading, uploadSuccess, path, message: uploadMessage } = uploadState\r\n\r\n  const propertyDetails = useSelector((state) => state.propertyDetails)\r\n  const { loading, error, property } = propertyDetails\r\n\r\n  const updatePropertyState = useSelector((state) => state.propertyUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    success,\r\n    error: errorUpdate,\r\n  } = updatePropertyState\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (success) {\r\n        dispatch({ type: UPLOAD_RESET })\r\n        dispatch({ type: PROPERTY_UPDATE_RESET })\r\n        history.push('/provider/property/list')\r\n      } else {\r\n        if (!property.name || property._id !== propertyId) {\r\n          dispatch(listPropertyDetails(propertyId))\r\n        } else {\r\n          setName(property.name)\r\n          setImages(property.images)\r\n          setPrice(property.price)\r\n          setCountry(property.country)\r\n          setLocation(property.location)\r\n          setOption(property.option)\r\n          setMaintainance(property.maintainance)\r\n          setSize(property.size)\r\n          setDescription(property.description)\r\n          setType(property.type)\r\n          setYear(property.year)\r\n          setBathrooms(property.bathrooms)\r\n          setBedrooms(property.bedrooms)\r\n        }\r\n        if (uploadSuccess) {\r\n          setMessage(uploadMessage)\r\n          setImages(path)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    success,\r\n    userInfo,\r\n    history,\r\n    dispatch,\r\n    property,\r\n    propertyId,\r\n    uploadMessage,\r\n    uploadSuccess,\r\n    path,\r\n  ])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const files = e.target.files\r\n    const formData = new FormData()\r\n\r\n    dispatch(upload(files, formData))\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    console.log(images)\r\n    dispatch(\r\n      updateProperty({\r\n        _id: property._id,\r\n        name,\r\n        price,\r\n        images,\r\n        country,\r\n        description,\r\n        option,\r\n        location,\r\n        bathrooms,\r\n        bedrooms,\r\n        maintainance,\r\n        size,\r\n        type,\r\n        year,\r\n      }),\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        <h3 className=\"login-h3 pt-5\">Update Property</h3>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>\r\n                {message !== '' ? (\r\n                  <strong>{message}</strong>\r\n                ) : (\r\n                  'Image (supports jpg/jpeg/png file formats)'\r\n                )}\r\n              </Form.Label>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n                multiple\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"country\">\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter country\"\r\n                value={country}\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"location\">\r\n              <Form.Label>Location</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter location\"\r\n                value={location}\r\n                onChange={(e) => setLocation(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"bathrooms\">\r\n              <Form.Label>Number of bathrooms</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter no of bathrooms\"\r\n                value={bathrooms}\r\n                onChange={(e) => setBathrooms(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"bedrooms\">\r\n              <Form.Label>Number of bedrooms</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter no of bedrooms\"\r\n                value={bedrooms}\r\n                onChange={(e) => setBedrooms(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"country\">\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={country}\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              >\r\n                <option value=\"Pune\">Pune</option>\r\n                <option value=\"Kota\">Kota</option>\r\n                <option value=\"Kolkata\">Kolkata</option>\r\n                <option value=\"Mumbai\">Mumbai</option>\r\n                <option value=\"Jaipur\">Jaipur</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"option\">\r\n              <Form.Label>Options: Buy/Sell/Rent</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={option}\r\n                onChange={(e) => setOption(e.target.value)}\r\n              >\r\n                <option value=\"Buy\">Buy</option>\r\n                <option value=\"Sell\">Sell</option>\r\n                <option value=\"Rent\">Rent</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"maintainance\">\r\n              <Form.Label>Maintainance</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter maintainance\"\r\n                value={maintainance}\r\n                onChange={(e) => setMaintainance(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"size\">\r\n              <Form.Label>Size</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter size\"\r\n                value={size}\r\n                onChange={(e) => setSize(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"type\">\r\n              <Form.Label>Type</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter type\"\r\n                value={type}\r\n                onChange={(e) => setType(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"year\">\r\n              <Form.Label>Year</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter year\"\r\n                value={year}\r\n                onChange={(e) => setYear(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              style={{ backgroundColor: '#00B4A2', border: 'none' }}\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n            >\r\n              Update Property\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditProperty\r\n"],"sourceRoot":""}