{"version":3,"sources":["components/Message.jsx","components/FormContainer.jsx","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/ToggleButton.js","screens/Register.jsx"],"names":["Message","variant","children","FormContainer","className","xs","md","ButtonGroup","React","forwardRef","_ref","ref","bsPrefix","size","toggle","vertical","_ref$as","as","Component","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","displayName","defaultProps","role","noop","ToggleButton","name","checked","type","onChange","value","disabled","inputRef","props","_useState","useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","Button","undefined","active","autoComplete","onFocus","onBlur","Register","history","setName","phone","setPhone","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","radioValue","setRadioValue","dispatch","useDispatch","userRegister","useSelector","state","loading","error","userInfo","useEffect","push","Container","Loader","Form","onSubmit","preventDefault","register","Row","map","radio","idx","currentTarget","Group","controlId","Label","Control","placeholder","style","backgroundColor","border","Col","to"],"mappings":"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","file":"static/js/17.2bbc06f0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant = 'info', children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ButtonGroup,\r\n  ToggleButton,\r\n} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Register = ({ history }) => {\r\n  const [name, setName] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  // const [type, setType] = useState('provider')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [radioValue, setRadioValue] = useState(true)\r\n\r\n  const radios = [\r\n    { name: 'provider', value: true },\r\n    { name: 'buyer', value: false },\r\n  ]\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/')\r\n    }\r\n  }, [history, userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password, radioValue))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"py-5\">\r\n        <FormContainer>\r\n          <h3 className=\"login-h3\">Register</h3>\r\n          {message && <Message variant=\"danger\">{message}</Message>}\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Row className=\"p-3\">\r\n              {/* <Button\r\n                className=\"p-2\"\r\n                style={(() => {\r\n                  if (type === 'provider')\r\n                    return {\r\n                      backgroundColor: '#00B4A2',\r\n                      color: 'white',\r\n                      border: 'none',\r\n                      borderRadius: '0px',\r\n                      outline: 'none',\r\n                    }\r\n                  else\r\n                    return {\r\n                      backgroundColor: 'white',\r\n                      color: '#00B4A2',\r\n                      border: '1px solid #00B4A2',\r\n                      borderRadius: '0px',\r\n                      cursor: 'pointer',\r\n                    }\r\n                })()}\r\n                onClick={(e) => {\r\n                  setType(e.target.innerText.toLowerCase())\r\n                }}\r\n              >\r\n                Provider\r\n              </Button>\r\n              <Button\r\n                className=\"p-2\"\r\n                style={(() => {\r\n                  if (type === 'buyer')\r\n                    return {\r\n                      backgroundColor: '#00B4A2',\r\n                      borderRadius: '0px',\r\n                      color: 'white',\r\n                      border: 'none',\r\n                      outline: 'none',\r\n                    }\r\n                  else\r\n                    return {\r\n                      backgroundColor: 'white',\r\n                      color: '#00B4A2',\r\n                      border: '1px solid #00B4A2',\r\n                      borderRadius: '0px',\r\n                      cursor: 'pointer',\r\n                    }\r\n                })()}\r\n                onClick={(e) => {\r\n                  setType(e.target.innerText.toLowerCase())\r\n                }}\r\n              >\r\n                Buyer\r\n              </Button> */}\r\n              <ButtonGroup toggle>\r\n                {radios.map((radio, idx) => (\r\n                  <ToggleButton\r\n                    key={idx}\r\n                    type=\"radio\"\r\n                    variant=\"primary\"\r\n                    name=\"radio\"\r\n                    value={radio.value}\r\n                    checked={radioValue === radio.value}\r\n                    onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n                  >\r\n                    {radio.name}\r\n                  </ToggleButton>\r\n                ))}\r\n              </ButtonGroup>\r\n            </Row>\r\n\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"phone\">\r\n              <Form.Label>phone</Form.Label>\r\n              <Form.Control\r\n                type=\"phone\"\r\n                placeholder=\"Enter phone\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter confirm password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              style={{ backgroundColor: '#00B4A2', border: 'none' }}\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </Form>\r\n\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              Already Have an Account? <Link to=\"/login\">Login</Link>\r\n            </Col>\r\n          </Row>\r\n        </FormContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\nexport default Register\r\n"],"sourceRoot":""}